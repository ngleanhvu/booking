spring:
  application:
    name: auth-service
  datasource:
    url: jdbc:mysql://localhost:${auth_db_port}/${AUTH_DB_DATABASE}?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
    username: ${AUTH_DB_USERNAME}
    password: ${AUTH_DB_PASSWORD}
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true

  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

  data:
    redis:
      host: ${AUTH_REDIS_HOST}
      password: ${AUTH_REDIS_PORT}

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8009/eureka/

aws:
  access_key_id: ${AWS_ACCESS_KEY_ID}
  secret_access_key: ${AWS_SECRET_ACCESS_KEY}
  region: ${AWS_REGION}
  s3_bucket_name: ${AWS_S3_BUCKET_NAME}

jwt:
  expiration:
    access_token: 600
    refresh_token: 604800

auth_db_port: 3307
host_name: localhost
protocol: http

grpc:
  server:
    port: 9015
  client:
    user-service:
      address: static://localhost:9000
      negotiationType: plaintext

server:
  port: 8015
